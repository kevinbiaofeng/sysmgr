package com.snake.mcf.project.sysmgr;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.snake.mcf.common.utils.security.MD5Utils;
import com.snake.mcf.common.utils.security.aes.AESCBCUtils;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RunWith(SpringJUnit4ClassRunner.class)
@TestPropertySource("classpath:pps/config.properties")
public class RSAUtilsTest {
	
	@Value("${api.request.rsa.private.key}")
	private String apiRequestRSAapiKey;
	
	@Value("${api.request.md5.key}")
	private String apiRequestMD5Key;
	
	@Value("${api.response.rsa.public.key}")
	private String apiResponseRSAPublicKey;
	
	@Value("${api.aes.ivp.key}")
	private String apiKey;
	/**
	 * 用户登陆
	 * @throws Exception
	 */
//	@Test
	public void testRequestAPIRSA() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"platformType\" : \"0\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"platformType\" : \"0\"}").append(apiRequestMD5Key).append("{\"platformType\" : \"0\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
	
	/**
	 * 响应接口解析
	 * @throws Exception
	 */
//	@Test
	public void testResponseAPIRSA() throws Exception {
		String str = "";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**{"type": "1"}
	 * 用户登陆之后
	 * @throws Exception
	 */
	@Test
	public void testRequestLoginAPIRSA() throws Exception {
		log.info("=========================================");
		log.info("testRequestLoginAPIRSA RSA Request str：{}", AESCBCUtils.encrypt("{\"userId\" : \"13037\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"userId\" : \"13037\"}").append(apiRequestMD5Key).append("{\"userId\" : \"13037\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseLoginAPIRSA() throws Exception {
		String str = "r8RUUHR7Z8ak5hYbiX8ezcs2uVZD0yv6aI6vg4AnwVSJyNkzFeW55kcgTAEqHMfXvNZTcBuZVQfwPSBXbEswwyac6S8uZ1EmDi6vlnArbDzCQA8+oSVIvz2Em+JhnCvA+I65pDIqQE1RVCQ1JdLzk/61VyY94tE6krx06GIJxI1LsCuwQyv+473gREhZLlGHhV7YpZE08SbKuV2Awf/y1VM/jVRXhBf4sc8S9Ic/mBHmMjNQPbd0RKGMU3p/ixi7SUTzviWFGcMRCh4CSCfCuPmSIM5DYnj2Do4qF73p3JydyVezi42aXWqnUFEnUB6unLEYO7Rqhm4lZPv8bO/NCQFjoWNwDSLsyWQcon4AuHQkVvjN2pCWJgu/UmSNR4jvgnDqZTnerulP/h+7OkYotvkpucL2fiqMuuuVBfNMxCTVild/3kWz5619UrxmlGPZBwa3bei11AVFEeXCJ9Ss7qM9juDleSwvXFtGQNUDb6R05qssTJC5JddC7Hbl91EYGWg4lDFWSxai2ib2GM12YD/xvA4xUMID/KH1bgwPGIqX8kwDk6HjSU/sn03pGfAqiYLgwWDkB/+9+MjXxcW/peTOrCoT2qEO9QN98/TkOcSe44NkG+UY80DvRMvgXu/kjhAWEiOI0MpMc28iPCCfFOU2XIYFykVJbys4hmt9mqOoWQKA4Gdw8hCpFa2WO59gtJ7lbMGB8D/1cpfNacapB2JxxS1AZIiCQH2HsGYnjfCYQCIwJW8LyUVFKMxhpwACQEEHCGYLRHLGJU2Med/5+16nQv/hNh6D6cVMq4BsxfK+pFo5kuo0TOFrXeuplFkCdPetfzK5uBadUz/XPK9JV67D4aKn59HxVgBr3ARD9IHrDA93t92mttsayCrYt5tW9rzyEqldK7p0mpn9Y5OTDovgiy1U26PrsP5HJmmwPo+WrFfy8hhhVn1co8oLFZOFMsuqqYk66LaT5JqwKF+e5ulK/c/wrSMQSeTIYXRjwyf8RJftZGKDS5To+7TsgfPtrMqP6l2cIgYlSlfXlxNm1Vyt/g/e0mZ/JCyOfnww3M7S4/+CiAPIChWGBiSLXCnINxQsnKbcmte3q4zz+VlpRSnVH/zO4am8Fjd3qRbFNeEt3RUQ4meJHSV8jGyhn2blpPwhO5kZCxM2qgzVEAC0pemnhjiiRTy19vTakYpPCIiNmcteLnHiWjoxsG+k647UTCizzYniKd1pdk0Tf/TqQTJE8k1amHqsOC3oZA/sxLNhzxHz9YPOfNje/fivLuzyOKnvDdosBMeqJaKNymEs8KGuzzmvqHdLFE0qKUVNEsy9DDl193ASnsWIYSlJotHfMK3TzDHcwF5jY/hhi/6SVgRR2KrAi/BRKNlHNPzIBOBDf5LHnIWwf7ocnzzhX2eDQHo4G4Pq8RPzD86BVpvP+eeNJzlXvhFRYp934H83qVJjadSsJ3gbR7OJ1TycpXGgsEkcu9i2FxNO6QoXIZ6hnydX8Tw29km3Mt+YAZkkJ4YJc7/hS9ZUi2iIUqa/yFOkPt+J8U1Tqoe10nPuoHTczZ2wqW8AIPqaX8LZkQZqIUPKB0M/lTDy7JUtJNOlFrZSjAWZDd9X5liB5HHLuTBOK+53EP/FFav9+8JXsLSE7gM3qLK9sxW2pZaba2s0MXthqvWwsgzppOqCtr69GbO6LM/LOay7Lnko3wd2szx/JG9up2AquG5iBvugaJaDlHWVo5WsCGbcUhP6UpYgt98LguzHQItRO8cCkVJcnAsP0j5a6dQJsngD7pgUqLMcKv/MnHzhJnGaARQsMv5KtBXsH6KGS0E28p0cNvrOJGwzwBdPpvhdFCZeFsVqUSyxvStLcNRJvInTy0monaJGilw3jHc8WRN0gM48jrmCUH2Ivlf7j0M+wBV3GR6qUF7aeiGTiQMTWtjRbM1YDbsWetOqtET94NmEp6lEC3aYTnIwX0n6xRG5p/ihl2GiMmYrH7kjkNvo32hQZdGRYIOtxytjTg6qnnMdBvVPTEbgBiMOOtTAPNncr35WXh4Dmlh5QyEWiog132Ip0P1MTLhq02RJsNlQEgIkBBzaaB2aUcpSRwcgijC80I7dNykAohqq++S/m3mZAV/giscGaPIPQQ3cpZy2w06+N5FIMc7PgxHrLHFZqGC7lQYNy3VB0RRjlxISUhhymUxht2UqhUMAzBEoGPP9a3xwlft0AdAh4jePxtkAMAcEk5Q9ywn3yTHuN5OgIw/mfOs46Eat/XR2XfTLES12eosi8no4CVpsg3aoGK76HnrWl7SXBg9nDRqa7KoMrbp7plwIPB20+xaeVxD+OzJz47LlcQqUMtnRvGOSDLTzyCuLKSKqjCf89Pt8ppyJUf/KpWFU8rrn+BFtNNJcgCFuXh3Mxg0LgnHTewthEwEumQRKibQP//zu42F2rh1B9LGNoiFG+oSG0z0lFylSD5X69+zCr/+uHRmdlXYxNYk4qs6vJnUdR1ZPDnXxepNbfmlzq0G2LFih24vFFZzWMVOjYnlbLrYTnkRiRsu8jmuA9v+Gn5Z4ksgR1lVQn/Kdb2CywpoUOlJVph6ANbqm8sTL8AXWoRkGkhxeOq1PoZB7FXpi/7IMAVHzOJHvP9+kmFgYxKdXwsyjMPx4mttMjViDnUfyesfc+lh+979SY1cmijrH7Cp0Mq8Cyn9bKscsZoQu9Go0/0NAEZjHqDDaF0g2fJNYzjXxqGnNgtrBas0=";
		log.info("testRequestLoginAPIRSA ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	
	/**
	 * 游戏列表
	 * @throws Exception
	 */
//	@Test
	public void testGameListRSA() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"type\": \"\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"type\": \"\"}").append(apiRequestMD5Key).append("{\"type\": \"\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGameListRSA() throws Exception {
		String str = "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";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	
	/**
	 * 获取用户信息
	 * @throws Exception
	 */
	@Test
	public void testUserInfoRSA() throws Exception {
		log.info("=========================================");
		log.info("testUserInfoRSA RSA Request str：{}", AESCBCUtils.encrypt("{\"userId\": \"13037\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"userId\": \"13037\"}").append(apiRequestMD5Key).append("{\"userId\": \"13037\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseUserInfoRSA() throws Exception {
		String str = "TAWfDPlBPmFk583DA2MZ2bIM6vYm9m0ebwdRm+ds6fZEzLa7vURQYilfaby75XwQIOulziIiIJ+fhgc5e3g7P20iUe1FPH4UO347DlZXToiKU1eeDs3fxYrHliYc5IEWottzchejQ7hJ9CEs4mWOXMSfQCIEpVCRlP5llcm9sPxlzd6mfgpZq3cx2dzKT0qcZSLTAeFajpnJ1cCS3nfmpM36yn78vRwznyUJs2xV5IAanoEyJl6hJplp1BeZCUGLt06A6Qvp+jtLNt/GXYuPKq3Kx1WlBuG6W4AQK4GytpLZpZvylAm04AGrZpP5ouc8FXfwlK607LUQg98Co4MlxSnNvQqlYuLqBWknXl/gUjqGIBYnsoJ75l+QRbjcMQVioaKID5xZqfVrJbP+fnu2TLOCP1/9YN8eRy7Pc19xAWryPlZnHcfimzuprCOwDVVMt1t9TYmsAUiSw0pfm8OAN26vPFpEpc+BHmr2XR/4VdHxnV/uaq1H26nsQul+D5QV";
		log.info("testUserInfoRSA ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 设置头像
	 * @throws Exception
	 */
	@Test
	public void testSetUserFace() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"customId\": \"0\", \"userId\": \"13085\", \"faceUrl\": \"http://cg.tg9qipai.com/Upload/Head/1.png\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"customId\": \"0\", \"userId\": \"13085\", \"faceUrl\": \"http://cg.tg9qipai.com/Upload/Head/1.png\"}").append(apiRequestMD5Key).append("{\"customId\": \"0\", \"userId\": \"13085\", \"faceUrl\": \"http://cg.tg9qipai.com/Upload/Head/1.png\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseSetUserFace() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取用户头像
	 * @throws Exception
	 */
//	@Test
	public void testGetUserFace() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"customId\": \"3064\", \"userId\": \"3062\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"customId\": \"3064\", \"userId\": \"3062\"}").append(apiRequestMD5Key).append("{\"customId\": \"3064\", \"userId\": \"3062\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetUserFace() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取用户头像列表
	 * @throws Exception
	 */
	@Test
	public void testGetUserFaceList() throws Exception {
		log.info("=========================================");
		log.info("testGetUserFaceList RSA Request str：{}", AESCBCUtils.encrypt("{\"page\":\"1\",\"count\":\"5\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"page\":\"1\",\"count\":\"5\"}").append(apiRequestMD5Key).append("{\"page\":\"1\",\"count\":\"5\"}").append("1572758843696");
		log.info("testGetUserFaceList MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetUserFaceList() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("testGetUserFaceList ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取银行记录
	 * @throws Exception
	 */
//	@Test
	public void testGetBankRecord() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"page\":\"1\",\"number\":\"5\",\"userId\":\"3054\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"page\":\"1\",\"number\":\"5\",\"userId\":\"3054\"}").append(apiRequestMD5Key).append("{\"page\":\"1\",\"number\":\"5\",\"userId\":\"3054\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetBankRecord() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取玩家财务信息
	 * @throws Exception
	 */
//	@Test
	public void testGetWealth() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"userId\":\"3054\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"userId\":\"3054\"}").append(apiRequestMD5Key).append("{\"userId\":\"3054\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetWealth() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取玩家战绩
	 * @throws Exception
	 */
//	@Test
	public void testGetHallBattleRecord() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"userId\":\"3005\", \"type\":\"2\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"userId\":\"3005\", \"type\":\"2\"}").append(apiRequestMD5Key).append("{\"userId\":\"3005\", \"type\":\"2\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetHallBattleRecord() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	/**
	 * 获取亲友圈战绩
	 * @throws Exception
	 */
//	@Test
	public void testGetGroupBattleRecord() throws Exception {
		log.info("=========================================");
		log.info("RSA Request str：{}", AESCBCUtils.encrypt("{\"userId\":\"13041\", \"groupId\":\"100017\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"userId\":\"13041\", \"groupId\":\"100017\"}").append(apiRequestMD5Key).append("{\"userId\":\"13041\", \"groupId\":\"100017\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGetGroupBattleRecord() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
//	@Test
	public void testQueryQuestionList() throws Exception {
		log.info("=========================================");
		log.info("testQueryQuestionList RSA Request str：{}", AESCBCUtils.encrypt("{\"merchant\":\"\"}", apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append("{\"merchant\":\"\"}").append(apiRequestMD5Key).append("{\"merchant\":\"\"}").append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseQueryQuestionList() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("testQueryQuestionList ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	
//	@Test
	public void testGetRecordTreasureTrade() throws Exception {
		log.info("=========================================");
		String json = "{\"page\":\"1\", \"size\":\"3\",\"userId\":\"3071\"}";
		log.info("testGetRecordTreasureTrade RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testGetRankingData() throws Exception {
		log.info("=========================================");
		String json = "{\"typeId\":\"2\",\"userId\":\"3071\"}";
		log.info("testGetRankingData RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
	
	@Test
	public void testReceiveRankingAward() throws Exception {
		log.info("=========================================");
		String json = "{\"dateId\":\"2\",\"userId\":\"3071\",\"typeId\":\"1\",\"ip\":\"1\"}";
		log.info("testReceiveRankingAward RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testRecordTreasureTrade() throws Exception {
		log.info("=========================================");
		String json = "{\"page\":\"1\",\"size\":\"3\",\"userId\":\"13099\"}";
		log.info("testQueryQuestionList RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseRecordTreasureTrade() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("testQueryQuestionList ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
//	@Test
	public void testGetGameIntroList() throws Exception {
		log.info("=========================================");
		String json = "{\"userId\":\"1\"}";
		log.info("testGetGameIntroList RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
	
//	@Test
	public void testResponseGameIntroList() throws Exception {
		String str = "lex9ibvaCnGf0EOsV6ztvFAQv/wq1H7VpWgUkqLft+lBIIeysYi0cnSLPsgHlvp0hmnniPA03mroWyqah5SHn75mVY59ixwDH23TO0vbfk/z3jy2z8Z++6O111YBKPid9RKuaCKuGsAE+Wksielg4oxxfCSEJF4W7suKe5k7+KgwN/Aa9wIzmKMc+jP4W+aaqGysGOyUI/sDaJwEE1HT9sp/uLIcy0FoPDYd2G4MvG9PSUZ5ePjHKnTZ4tiw2+GREm8cTOFK+2jGILHheQ7+Ev3nN5IE0LC/VuqbZvW+1psTHfKP+c7gbE3/wq6VR4XziZlb/zmcGp8wGz/Wo2psEQ==";
		log.info("testResponseGameIntroList ====response json str11111：{}", AESCBCUtils.decrypt(str, apiKey));
	}
	
	@Test
	public void testGetQrCreateQrCode() throws Exception {
		log.info("=========================================");
		String json = "{\"gameId\":115776,\"userId\":13027,\"merchant\":\"bf699053658544349e32c936e9f06412\"}";
		log.info("testGetQrCreateQrCode RSA Request str：{}", AESCBCUtils.encrypt(json, apiKey));
		StringBuffer sb = new StringBuffer();
		sb.append(json).append(apiRequestMD5Key).append(json).append("1572758843696");
		log.info("MD5 Request str：{}", MD5Utils.md5Digest(sb.toString()));
	}
}
